server {
    server_name ${NGINX_SERVER_NAME};
    listen ${PORT};
    error_log  /app/askdarcel/error.log;

    root /app/askdarcel;

    # `gzip settings` commonly recommended
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types
      application/atom+xml
      application/geo+json
      application/javascript
      application/json
      application/ld+json
      application/manifest+json
      application/rdf+xml
      application/rss+xml
      application/x-javascript
      application/xhtml+xml
      application/xml
      font/eot
      font/otf
      font/ttf
      image/svg+xml
      text/css
      text/javascript
      text/plain
      text/xml;

    brotli on;
    brotli_comp_level 6;
    brotli_types
      application/atom+xml
      application/geo+json
      application/javascript
      application/json
      application/ld+json
      application/manifest+json
      application/rdf+xml
      application/rss+xml
      application/x-javascript
      application/xhtml+xml
      application/xml
      font/eot
      font/otf
      font/ttf
      image/svg+xml
      text/css
      text/javascript
      text/plain
      text/xml;

    location ~ ^/api/v2/(.*)$ {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host ${NGINX_PROXY_HOST_HEADER};
        proxy_ssl_server_name on;

        # See https://forum.nginx.org/read.php?2,215830,215832#msg-215832
        # nginx only resolves DNS for statically-configured domain names
        # once on startup. Since the API is behind an ELB whose IPs may
        # change, we must configure nginx to resolve DNS dynamically.
        # To do this, we configure a DNS resolver here and use a variable
        # rather than a literal URL when configuring the proxy below.
        resolver 8.8.8.8;
        resolver_timeout 5s;

        set $api_url ${NGINX_API_GO_URL};
        proxy_pass $api_url/$1$is_args$args;
        proxy_redirect off;
    }

    location ~ ^/api/(.*)$ {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host ${NGINX_PROXY_HOST_HEADER};
        proxy_ssl_server_name on;

        # See https://forum.nginx.org/read.php?2,215830,215832#msg-215832
        # nginx only resolves DNS for statically-configured domain names
        # once on startup. Since the API is behind an ELB whose IPs may
        # change, we must configure nginx to resolve DNS dynamically.
        # To do this, we configure a DNS resolver here and use a variable
        # rather than a literal URL when configuring the proxy below.
        resolver 8.8.8.8;
        resolver_timeout 5s;

        set $api_url ${NGINX_API_URL};
        proxy_pass $api_url/$1$is_args$args;
        proxy_redirect off;
    }

    location = /_version {
        expires -1;
        try_files /_version.json =404;
    }

    location ~ ^/dist/(.*)$ {
        try_files /$1 /robots.txt =404;
    }

    location / {
        try_files /index.html =404;
    }
}
